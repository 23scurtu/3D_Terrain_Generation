#version 330 core

layout (location = 0) in vec3 in_cube;
layout(location = 2) in vec3 in_normal;

out vec3 normal;
out vec3 light;
out float yval;

uniform mat4 view; 
uniform mat4 model;
uniform vec3 in_light;

void main()
{
	mat3 normalMatrix = transpose(inverse(mat3(model)));
    normal = normalize(normalMatrix * in_normal);
	yval = in_cube.y;

	gl_Position = view*vec4(in_cube,1);
	light = in_light - vec3(model * vec4(in_cube, 1)); // makes light vec follow view

	//UVof the vertex
	
}